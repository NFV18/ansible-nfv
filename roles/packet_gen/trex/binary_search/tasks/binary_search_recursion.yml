- name: Group of tasks that are tightly coupled
  vars:
    binary_search_max_retries: "{{ 3 | int }}"
    binary_search_retry_delay: "{{ 10 | int }}"
  block:
  - name: Increment the retry count
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

  - name: Run Binary Search Script
    shell: >-
     {{ traffic_cmd | regex_replace('\n') }} > {{ binary_search_run_log }} &
    become: True
    ignore_errors: yes
    failed_when: False

  - name: Check binary_search status
    command: grep -E 'binary\ search\ aborting\ due\ to\ critical\ error|There\ is\ no\ trial\ which\ passed|Finished\ binary-search|The\ retry\ limit\ for\ a\ trial\ has\ been\ reached' {{ binary_search_run_log }}
    register: binary_search_status
    changed_when: no
    retries: "{{ binary_search_status_retry }}"
    delay: "{{ binary_search_status_delay }}"
    until: binary_search_status.rc == 0
    ignore_errors: yes
    failed_when: False
    become: true

  - fail:
      msg: "{{ binary_search_status }}"
    when: binary_search_status.stdout is search('The retry limit for a trial has been reached') or binary_search_status.stdout is search('There is no trial which passed') or binary_search_status.stdout is search('Binary search aborting due to critical error')

  rescue:
    - name: Fetch binary search log
      command: cat "{{ binary_search_run_log }}"
      register: perf_output

    - name: Save Binary Search Script Result To File
      copy:
        content: "{{ perf_output['stdout'] }}"
        dest: "{{ binary_perf_log }}_{{ retry_count }}"
      delegate_to: "{{ groups['undercloud'] | first }}"

    - fail:
        msg: Binary search failed Maximum retries reached
      when: retry_count | int == binary_search_max_retries | int

    - debug:
        msg: "Binary search failed, retrying"

    - name: Sleep between retries
      wait_for:
        timeout: "{{ binary_search_retry_delay }}" # seconds
      delegate_to: localhost
      become: false

    - include_tasks: binary_search_recursion.yml

- name: Fetch binary search log
  command: cat "{{ binary_search_run_log }}"
  register: perf_output

